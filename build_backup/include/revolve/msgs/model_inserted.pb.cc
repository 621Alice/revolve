// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_inserted.proto

#include "model_inserted.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace revolve {
namespace msgs {
class ModelInsertedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelInserted>
      _instance;
} _ModelInserted_default_instance_;
}  // namespace msgs
}  // namespace revolve
namespace protobuf_model_5finserted_2eproto {
void InitDefaultsModelInsertedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_time_2eproto::InitDefaultsTime();
  protobuf_model_2eproto::InitDefaultsModel();
  {
    void* ptr = &::revolve::msgs::_ModelInserted_default_instance_;
    new (ptr) ::revolve::msgs::ModelInserted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::revolve::msgs::ModelInserted::InitAsDefaultInstance();
}

void InitDefaultsModelInserted() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModelInsertedImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::ModelInserted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::ModelInserted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::ModelInserted, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::ModelInserted, model_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::revolve::msgs::ModelInserted)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_ModelInserted_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "model_inserted.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024model_inserted.proto\022\014revolve.msgs\032\013mo"
      "del.proto\032\ntime.proto\"S\n\rModelInserted\022\037"
      "\n\004time\030\001 \002(\0132\021.gazebo.msgs.Time\022!\n\005model"
      "\030\002 \002(\0132\022.gazebo.msgs.Model"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 146);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model_inserted.proto", &protobuf_RegisterTypes);
  ::protobuf_model_2eproto::AddDescriptors();
  ::protobuf_time_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_model_5finserted_2eproto
namespace revolve {
namespace msgs {

// ===================================================================

void ModelInserted::InitAsDefaultInstance() {
  ::revolve::msgs::_ModelInserted_default_instance_._instance.get_mutable()->time_ = const_cast< ::gazebo::msgs::Time*>(
      ::gazebo::msgs::Time::internal_default_instance());
  ::revolve::msgs::_ModelInserted_default_instance_._instance.get_mutable()->model_ = const_cast< ::gazebo::msgs::Model*>(
      ::gazebo::msgs::Model::internal_default_instance());
}
void ModelInserted::clear_time() {
  if (time_ != NULL) time_->Clear();
  clear_has_time();
}
void ModelInserted::clear_model() {
  if (model_ != NULL) model_->Clear();
  clear_has_model();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelInserted::kTimeFieldNumber;
const int ModelInserted::kModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelInserted::ModelInserted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_model_5finserted_2eproto::InitDefaultsModelInserted();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.ModelInserted)
}
ModelInserted::ModelInserted(const ModelInserted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time()) {
    time_ = new ::gazebo::msgs::Time(*from.time_);
  } else {
    time_ = NULL;
  }
  if (from.has_model()) {
    model_ = new ::gazebo::msgs::Model(*from.model_);
  } else {
    model_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.ModelInserted)
}

void ModelInserted::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_) -
      reinterpret_cast<char*>(&time_)) + sizeof(model_));
}

ModelInserted::~ModelInserted() {
  // @@protoc_insertion_point(destructor:revolve.msgs.ModelInserted)
  SharedDtor();
}

void ModelInserted::SharedDtor() {
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete model_;
}

void ModelInserted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelInserted::descriptor() {
  ::protobuf_model_5finserted_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_5finserted_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelInserted& ModelInserted::default_instance() {
  ::protobuf_model_5finserted_2eproto::InitDefaultsModelInserted();
  return *internal_default_instance();
}

ModelInserted* ModelInserted::New(::google::protobuf::Arena* arena) const {
  ModelInserted* n = new ModelInserted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelInserted::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.ModelInserted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(time_ != NULL);
      time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(model_ != NULL);
      model_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelInserted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.ModelInserted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gazebo.msgs.Time time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .gazebo.msgs.Model model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.ModelInserted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.ModelInserted)
  return false;
#undef DO_
}

void ModelInserted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.ModelInserted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gazebo.msgs.Time time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->time_, output);
  }

  // required .gazebo.msgs.Model model = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->model_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.ModelInserted)
}

::google::protobuf::uint8* ModelInserted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.ModelInserted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gazebo.msgs.Time time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->time_, deterministic, target);
  }

  // required .gazebo.msgs.Model model = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->model_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.ModelInserted)
  return target;
}

size_t ModelInserted::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:revolve.msgs.ModelInserted)
  size_t total_size = 0;

  if (has_time()) {
    // required .gazebo.msgs.Time time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_);
  }

  if (has_model()) {
    // required .gazebo.msgs.Model model = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->model_);
  }

  return total_size;
}
size_t ModelInserted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.ModelInserted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .gazebo.msgs.Time time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_);

    // required .gazebo.msgs.Model model = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->model_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelInserted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.ModelInserted)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelInserted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelInserted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.ModelInserted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.ModelInserted)
    MergeFrom(*source);
  }
}

void ModelInserted::MergeFrom(const ModelInserted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.ModelInserted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_time()->::gazebo::msgs::Time::MergeFrom(from.time());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_model()->::gazebo::msgs::Model::MergeFrom(from.model());
    }
  }
}

void ModelInserted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.ModelInserted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelInserted::CopyFrom(const ModelInserted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.ModelInserted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInserted::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_time()) {
    if (!this->time_->IsInitialized()) return false;
  }
  if (has_model()) {
    if (!this->model_->IsInitialized()) return false;
  }
  return true;
}

void ModelInserted::Swap(ModelInserted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelInserted::InternalSwap(ModelInserted* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(model_, other->model_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelInserted::GetMetadata() const {
  protobuf_model_5finserted_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_model_5finserted_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace revolve

// @@protoc_insertion_point(global_scope)
