// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: body.proto

#include "body.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace revolve {
namespace msgs {
class BodyPartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BodyPart>
      _instance;
} _BodyPart_default_instance_;
class BodyConnectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BodyConnection>
      _instance;
} _BodyConnection_default_instance_;
class BodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Body>
      _instance;
} _Body_default_instance_;
}  // namespace msgs
}  // namespace revolve
namespace protobuf_body_2eproto {
void InitDefaultsBodyConnectionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_parameter_2eproto::InitDefaultsParameter();
  {
    void* ptr = &::revolve::msgs::_BodyPart_default_instance_;
    new (ptr) ::revolve::msgs::BodyPart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::revolve::msgs::_BodyConnection_default_instance_;
    new (ptr) ::revolve::msgs::BodyConnection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::revolve::msgs::BodyPart::InitAsDefaultInstance();
  ::revolve::msgs::BodyConnection::InitAsDefaultInstance();
}

void InitDefaultsBodyConnection() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBodyConnectionImpl);
}

void InitDefaultsBodyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_body_2eproto::InitDefaultsBodyConnection();
  {
    void* ptr = &::revolve::msgs::_Body_default_instance_;
    new (ptr) ::revolve::msgs::Body();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::revolve::msgs::Body::InitAsDefaultInstance();
}

void InitDefaultsBody() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBodyImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, child_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyPart, label_),
  0,
  1,
  3,
  4,
  5,
  ~0u,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyConnection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyConnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyConnection, src_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyConnection, dst_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyConnection, part_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Body, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Body, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Body, root_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::revolve::msgs::BodyPart)},
  { 21, 29, sizeof(::revolve::msgs::BodyConnection)},
  { 32, 38, sizeof(::revolve::msgs::Body)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_BodyPart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_BodyConnection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_Body_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "body.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nbody.proto\022\014revolve.msgs\032\017parameter.pr"
      "oto\"\263\001\n\010BodyPart\022\n\n\002id\030\001 \002(\t\022\014\n\004type\030\002 \002"
      "(\t\022\t\n\001x\030\003 \002(\005\022\t\n\001y\030\004 \002(\005\022\023\n\013orientation\030"
      "\005 \002(\001\022+\n\005child\030\006 \003(\0132\034.revolve.msgs.Body"
      "Connection\022&\n\005param\030\007 \003(\0132\027.revolve.msgs"
      ".Parameter\022\r\n\005label\030\010 \001(\t\"Z\n\016BodyConnect"
      "ion\022\020\n\010src_slot\030\001 \002(\005\022\020\n\010dst_slot\030\002 \002(\005\022"
      "$\n\004part\030\003 \002(\0132\026.revolve.msgs.BodyPart\",\n"
      "\004Body\022$\n\004root\030\001 \002(\0132\026.revolve.msgs.BodyP"
      "art"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "body.proto", &protobuf_RegisterTypes);
  ::protobuf_parameter_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_body_2eproto
namespace revolve {
namespace msgs {

// ===================================================================

void BodyPart::InitAsDefaultInstance() {
}
void BodyPart::clear_param() {
  param_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BodyPart::kIdFieldNumber;
const int BodyPart::kTypeFieldNumber;
const int BodyPart::kXFieldNumber;
const int BodyPart::kYFieldNumber;
const int BodyPart::kOrientationFieldNumber;
const int BodyPart::kChildFieldNumber;
const int BodyPart::kParamFieldNumber;
const int BodyPart::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BodyPart::BodyPart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_body_2eproto::InitDefaultsBodyConnection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.BodyPart)
}
BodyPart::BodyPart(const BodyPart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      child_(from.child_),
      param_(from.param_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_label()) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&orientation_) -
    reinterpret_cast<char*>(&x_)) + sizeof(orientation_));
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.BodyPart)
}

void BodyPart::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&x_)) + sizeof(orientation_));
}

BodyPart::~BodyPart() {
  // @@protoc_insertion_point(destructor:revolve.msgs.BodyPart)
  SharedDtor();
}

void BodyPart::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BodyPart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BodyPart::descriptor() {
  ::protobuf_body_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_body_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BodyPart& BodyPart::default_instance() {
  ::protobuf_body_2eproto::InitDefaultsBodyConnection();
  return *internal_default_instance();
}

BodyPart* BodyPart::New(::google::protobuf::Arena* arena) const {
  BodyPart* n = new BodyPart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BodyPart::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.BodyPart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  param_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*label_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&orientation_) -
        reinterpret_cast<char*>(&x_)) + sizeof(orientation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BodyPart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.BodyPart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revolve.msgs.BodyPart.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revolve.msgs.BodyPart.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double orientation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_orientation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .revolve.msgs.BodyConnection child = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .revolve.msgs.Parameter param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string label = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revolve.msgs.BodyPart.label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.BodyPart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.BodyPart)
  return false;
#undef DO_
}

void BodyPart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.BodyPart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.BodyPart.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.BodyPart.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // required int32 x = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // required int32 y = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  // required double orientation = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->orientation(), output);
  }

  // repeated .revolve.msgs.BodyConnection child = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->child(static_cast<int>(i)), output);
  }

  // repeated .revolve.msgs.Parameter param = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->param_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->param(static_cast<int>(i)), output);
  }

  // optional string label = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.BodyPart.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->label(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.BodyPart)
}

::google::protobuf::uint8* BodyPart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.BodyPart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.BodyPart.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.BodyPart.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // required int32 x = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // required int32 y = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  // required double orientation = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->orientation(), target);
  }

  // repeated .revolve.msgs.BodyConnection child = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->child(static_cast<int>(i)), deterministic, target);
  }

  // repeated .revolve.msgs.Parameter param = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->param_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->param(static_cast<int>(i)), deterministic, target);
  }

  // optional string label = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.BodyPart.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->label(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.BodyPart)
  return target;
}

size_t BodyPart::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:revolve.msgs.BodyPart)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_type()) {
    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_x()) {
    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_orientation()) {
    // required double orientation = 5;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t BodyPart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.BodyPart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003b) ^ 0x0000003b) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required double orientation = 5;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .revolve.msgs.BodyConnection child = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // repeated .revolve.msgs.Parameter param = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->param_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->param(static_cast<int>(i)));
    }
  }

  // optional string label = 8;
  if (has_label()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BodyPart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.BodyPart)
  GOOGLE_DCHECK_NE(&from, this);
  const BodyPart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BodyPart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.BodyPart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.BodyPart)
    MergeFrom(*source);
  }
}

void BodyPart::MergeFrom(const BodyPart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.BodyPart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  param_.MergeFrom(from.param_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (cached_has_bits & 0x00000008u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000020u) {
      orientation_ = from.orientation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BodyPart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.BodyPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BodyPart::CopyFrom(const BodyPart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.BodyPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BodyPart::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003b) != 0x0000003b) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->child())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->param())) return false;
  return true;
}

void BodyPart::Swap(BodyPart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BodyPart::InternalSwap(BodyPart* other) {
  using std::swap;
  child_.InternalSwap(&other->child_);
  param_.InternalSwap(&other->param_);
  id_.Swap(&other->id_);
  type_.Swap(&other->type_);
  label_.Swap(&other->label_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(orientation_, other->orientation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BodyPart::GetMetadata() const {
  protobuf_body_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_body_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BodyConnection::InitAsDefaultInstance() {
  ::revolve::msgs::_BodyConnection_default_instance_._instance.get_mutable()->part_ = const_cast< ::revolve::msgs::BodyPart*>(
      ::revolve::msgs::BodyPart::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BodyConnection::kSrcSlotFieldNumber;
const int BodyConnection::kDstSlotFieldNumber;
const int BodyConnection::kPartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BodyConnection::BodyConnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_body_2eproto::InitDefaultsBodyConnection();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.BodyConnection)
}
BodyConnection::BodyConnection(const BodyConnection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_part()) {
    part_ = new ::revolve::msgs::BodyPart(*from.part_);
  } else {
    part_ = NULL;
  }
  ::memcpy(&src_slot_, &from.src_slot_,
    static_cast<size_t>(reinterpret_cast<char*>(&dst_slot_) -
    reinterpret_cast<char*>(&src_slot_)) + sizeof(dst_slot_));
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.BodyConnection)
}

void BodyConnection::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&part_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_slot_) -
      reinterpret_cast<char*>(&part_)) + sizeof(dst_slot_));
}

BodyConnection::~BodyConnection() {
  // @@protoc_insertion_point(destructor:revolve.msgs.BodyConnection)
  SharedDtor();
}

void BodyConnection::SharedDtor() {
  if (this != internal_default_instance()) delete part_;
}

void BodyConnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BodyConnection::descriptor() {
  ::protobuf_body_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_body_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BodyConnection& BodyConnection::default_instance() {
  ::protobuf_body_2eproto::InitDefaultsBodyConnection();
  return *internal_default_instance();
}

BodyConnection* BodyConnection::New(::google::protobuf::Arena* arena) const {
  BodyConnection* n = new BodyConnection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BodyConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.BodyConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(part_ != NULL);
    part_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&src_slot_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dst_slot_) -
        reinterpret_cast<char*>(&src_slot_)) + sizeof(dst_slot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BodyConnection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.BodyConnection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 src_slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_src_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dst_slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dst_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .revolve.msgs.BodyPart part = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_part()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.BodyConnection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.BodyConnection)
  return false;
#undef DO_
}

void BodyConnection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.BodyConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 src_slot = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->src_slot(), output);
  }

  // required int32 dst_slot = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dst_slot(), output);
  }

  // required .revolve.msgs.BodyPart part = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->part_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.BodyConnection)
}

::google::protobuf::uint8* BodyConnection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.BodyConnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 src_slot = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->src_slot(), target);
  }

  // required int32 dst_slot = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dst_slot(), target);
  }

  // required .revolve.msgs.BodyPart part = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->part_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.BodyConnection)
  return target;
}

size_t BodyConnection::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:revolve.msgs.BodyConnection)
  size_t total_size = 0;

  if (has_part()) {
    // required .revolve.msgs.BodyPart part = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->part_);
  }

  if (has_src_slot()) {
    // required int32 src_slot = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_slot());
  }

  if (has_dst_slot()) {
    // required int32 dst_slot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst_slot());
  }

  return total_size;
}
size_t BodyConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.BodyConnection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .revolve.msgs.BodyPart part = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->part_);

    // required int32 src_slot = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src_slot());

    // required int32 dst_slot = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst_slot());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BodyConnection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.BodyConnection)
  GOOGLE_DCHECK_NE(&from, this);
  const BodyConnection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BodyConnection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.BodyConnection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.BodyConnection)
    MergeFrom(*source);
  }
}

void BodyConnection::MergeFrom(const BodyConnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.BodyConnection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_part()->::revolve::msgs::BodyPart::MergeFrom(from.part());
    }
    if (cached_has_bits & 0x00000002u) {
      src_slot_ = from.src_slot_;
    }
    if (cached_has_bits & 0x00000004u) {
      dst_slot_ = from.dst_slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BodyConnection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.BodyConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BodyConnection::CopyFrom(const BodyConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.BodyConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BodyConnection::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_part()) {
    if (!this->part_->IsInitialized()) return false;
  }
  return true;
}

void BodyConnection::Swap(BodyConnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BodyConnection::InternalSwap(BodyConnection* other) {
  using std::swap;
  swap(part_, other->part_);
  swap(src_slot_, other->src_slot_);
  swap(dst_slot_, other->dst_slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BodyConnection::GetMetadata() const {
  protobuf_body_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_body_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Body::InitAsDefaultInstance() {
  ::revolve::msgs::_Body_default_instance_._instance.get_mutable()->root_ = const_cast< ::revolve::msgs::BodyPart*>(
      ::revolve::msgs::BodyPart::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Body::kRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Body::Body()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_body_2eproto::InitDefaultsBody();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.Body)
}
Body::Body(const Body& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_root()) {
    root_ = new ::revolve::msgs::BodyPart(*from.root_);
  } else {
    root_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.Body)
}

void Body::SharedCtor() {
  _cached_size_ = 0;
  root_ = NULL;
}

Body::~Body() {
  // @@protoc_insertion_point(destructor:revolve.msgs.Body)
  SharedDtor();
}

void Body::SharedDtor() {
  if (this != internal_default_instance()) delete root_;
}

void Body::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Body::descriptor() {
  ::protobuf_body_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_body_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Body& Body::default_instance() {
  ::protobuf_body_2eproto::InitDefaultsBody();
  return *internal_default_instance();
}

Body* Body::New(::google::protobuf::Arena* arena) const {
  Body* n = new Body;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Body::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(root_ != NULL);
    root_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Body::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.Body)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .revolve.msgs.BodyPart root = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.Body)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.Body)
  return false;
#undef DO_
}

void Body::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .revolve.msgs.BodyPart root = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->root_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.Body)
}

::google::protobuf::uint8* Body::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .revolve.msgs.BodyPart root = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->root_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.Body)
  return target;
}

size_t Body::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.Body)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .revolve.msgs.BodyPart root = 1;
  if (has_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Body::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.Body)
  GOOGLE_DCHECK_NE(&from, this);
  const Body* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Body>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.Body)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.Body)
    MergeFrom(*source);
  }
}

void Body::MergeFrom(const Body& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.Body)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_root()) {
    mutable_root()->::revolve::msgs::BodyPart::MergeFrom(from.root());
  }
}

void Body::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Body::CopyFrom(const Body& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Body::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_root()) {
    if (!this->root_->IsInitialized()) return false;
  }
  return true;
}

void Body::Swap(Body* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Body::InternalSwap(Body* other) {
  using std::swap;
  swap(root_, other->root_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Body::GetMetadata() const {
  protobuf_body_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_body_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace revolve

// @@protoc_insertion_point(global_scope)
