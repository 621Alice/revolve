// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdf_body_analyze.proto

#include "sdf_body_analyze.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_sdf_5fbody_5fanalyze_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sdf_5fbody_5fanalyze_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Contact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_sdf_5fbody_5fanalyze_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BoundingBox;
}  // namespace protobuf_sdf_5fbody_5fanalyze_2eproto
namespace protobuf_vector3d_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vector3d_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3d;
}  // namespace protobuf_vector3d_2eproto
namespace revolve {
namespace msgs {
class ContactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Contact>
      _instance;
} _Contact_default_instance_;
class BoundingBoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoundingBox>
      _instance;
} _BoundingBox_default_instance_;
class BodyAnalysisResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BodyAnalysisResponse>
      _instance;
} _BodyAnalysisResponse_default_instance_;
}  // namespace msgs
}  // namespace revolve
namespace protobuf_sdf_5fbody_5fanalyze_2eproto {
static void InitDefaultsContact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::revolve::msgs::_Contact_default_instance_;
    new (ptr) ::revolve::msgs::Contact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::revolve::msgs::Contact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Contact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContact}, {}};

static void InitDefaultsBoundingBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::revolve::msgs::_BoundingBox_default_instance_;
    new (ptr) ::revolve::msgs::BoundingBox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::revolve::msgs::BoundingBox::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BoundingBox =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBoundingBox}, {
      &protobuf_vector3d_2eproto::scc_info_Vector3d.base,}};

static void InitDefaultsBodyAnalysisResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::revolve::msgs::_BodyAnalysisResponse_default_instance_;
    new (ptr) ::revolve::msgs::BodyAnalysisResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::revolve::msgs::BodyAnalysisResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BodyAnalysisResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBodyAnalysisResponse}, {
      &protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_BoundingBox.base,
      &protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_Contact.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Contact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoundingBox.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BodyAnalysisResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Contact, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Contact, collision1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::Contact, collision2_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BoundingBox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BoundingBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BoundingBox, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BoundingBox, max_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyAnalysisResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyAnalysisResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyAnalysisResponse, boundingbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::revolve::msgs::BodyAnalysisResponse, contact_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::revolve::msgs::Contact)},
  { 9, 16, sizeof(::revolve::msgs::BoundingBox)},
  { 18, 25, sizeof(::revolve::msgs::BodyAnalysisResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_Contact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_BoundingBox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::revolve::msgs::_BodyAnalysisResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "sdf_body_analyze.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026sdf_body_analyze.proto\022\014revolve.msgs\032\016"
      "vector3d.proto\"1\n\007Contact\022\022\n\ncollision1\030"
      "\001 \002(\t\022\022\n\ncollision2\030\002 \002(\t\"U\n\013BoundingBox"
      "\022\"\n\003min\030\001 \002(\0132\025.gazebo.msgs.Vector3d\022\"\n\003"
      "max\030\002 \002(\0132\025.gazebo.msgs.Vector3d\"n\n\024Body"
      "AnalysisResponse\022.\n\013boundingBox\030\001 \001(\0132\031."
      "revolve.msgs.BoundingBox\022&\n\007contact\030\002 \003("
      "\0132\025.revolve.msgs.Contact"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 304);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sdf_body_analyze.proto", &protobuf_RegisterTypes);
  ::protobuf_vector3d_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sdf_5fbody_5fanalyze_2eproto
namespace revolve {
namespace msgs {

// ===================================================================

void Contact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contact::kCollision1FieldNumber;
const int Contact::kCollision2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contact::Contact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_Contact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.Contact)
}
Contact::Contact(const Contact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collision1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collision1()) {
    collision1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collision1_);
  }
  collision2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collision2()) {
    collision2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collision2_);
  }
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.Contact)
}

void Contact::SharedCtor() {
  collision1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collision2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:revolve.msgs.Contact)
  SharedDtor();
}

void Contact::SharedDtor() {
  collision1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collision2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Contact::descriptor() {
  ::protobuf_sdf_5fbody_5fanalyze_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdf_5fbody_5fanalyze_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Contact& Contact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_Contact.base);
  return *internal_default_instance();
}


void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      collision1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      collision2_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Contact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.Contact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string collision1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collision1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collision1().data(), static_cast<int>(this->collision1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revolve.msgs.Contact.collision1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string collision2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collision2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collision2().data(), static_cast<int>(this->collision2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revolve.msgs.Contact.collision2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.Contact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.Contact)
  return false;
#undef DO_
}

void Contact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string collision1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision1().data(), static_cast<int>(this->collision1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.Contact.collision1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collision1(), output);
  }

  // required string collision2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision2().data(), static_cast<int>(this->collision2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.Contact.collision2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collision2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.Contact)
}

::google::protobuf::uint8* Contact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string collision1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision1().data(), static_cast<int>(this->collision1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.Contact.collision1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collision1(), target);
  }

  // required string collision2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision2().data(), static_cast<int>(this->collision2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revolve.msgs.Contact.collision2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collision2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.Contact)
  return target;
}

size_t Contact::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:revolve.msgs.Contact)
  size_t total_size = 0;

  if (has_collision1()) {
    // required string collision1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision1());
  }

  if (has_collision2()) {
    // required string collision2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision2());
  }

  return total_size;
}
size_t Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.Contact)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string collision1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision1());

    // required string collision2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const Contact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Contact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.Contact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.Contact)
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_collision1();
      collision1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collision1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_collision2();
      collision2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collision2_);
    }
  }
}

void Contact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Contact::Swap(Contact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contact::InternalSwap(Contact* other) {
  using std::swap;
  collision1_.Swap(&other->collision1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collision2_.Swap(&other->collision2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Contact::GetMetadata() const {
  protobuf_sdf_5fbody_5fanalyze_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdf_5fbody_5fanalyze_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoundingBox::InitAsDefaultInstance() {
  ::revolve::msgs::_BoundingBox_default_instance_._instance.get_mutable()->min_ = const_cast< ::gazebo::msgs::Vector3d*>(
      ::gazebo::msgs::Vector3d::internal_default_instance());
  ::revolve::msgs::_BoundingBox_default_instance_._instance.get_mutable()->max_ = const_cast< ::gazebo::msgs::Vector3d*>(
      ::gazebo::msgs::Vector3d::internal_default_instance());
}
void BoundingBox::clear_min() {
  if (min_ != NULL) min_->Clear();
  clear_has_min();
}
void BoundingBox::clear_max() {
  if (max_ != NULL) max_->Clear();
  clear_has_max();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundingBox::kMinFieldNumber;
const int BoundingBox::kMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundingBox::BoundingBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_BoundingBox.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.BoundingBox)
}
BoundingBox::BoundingBox(const BoundingBox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::gazebo::msgs::Vector3d(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::gazebo::msgs::Vector3d(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.BoundingBox)
}

void BoundingBox::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
}

BoundingBox::~BoundingBox() {
  // @@protoc_insertion_point(destructor:revolve.msgs.BoundingBox)
  SharedDtor();
}

void BoundingBox::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
}

void BoundingBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoundingBox::descriptor() {
  ::protobuf_sdf_5fbody_5fanalyze_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdf_5fbody_5fanalyze_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundingBox& BoundingBox::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_BoundingBox.base);
  return *internal_default_instance();
}


void BoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(min_ != NULL);
      min_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(max_ != NULL);
      max_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BoundingBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.BoundingBox)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .gazebo.msgs.Vector3d min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .gazebo.msgs.Vector3d max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.BoundingBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.BoundingBox)
  return false;
#undef DO_
}

void BoundingBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gazebo.msgs.Vector3d min = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_min(), output);
  }

  // required .gazebo.msgs.Vector3d max = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_max(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.BoundingBox)
}

::google::protobuf::uint8* BoundingBox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.BoundingBox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .gazebo.msgs.Vector3d min = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_min(), deterministic, target);
  }

  // required .gazebo.msgs.Vector3d max = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_max(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.BoundingBox)
  return target;
}

size_t BoundingBox::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:revolve.msgs.BoundingBox)
  size_t total_size = 0;

  if (has_min()) {
    // required .gazebo.msgs.Vector3d min = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_);
  }

  if (has_max()) {
    // required .gazebo.msgs.Vector3d max = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_);
  }

  return total_size;
}
size_t BoundingBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.BoundingBox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .gazebo.msgs.Vector3d min = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_);

    // required .gazebo.msgs.Vector3d max = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoundingBox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundingBox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundingBox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.BoundingBox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.BoundingBox)
    MergeFrom(*source);
  }
}

void BoundingBox::MergeFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.BoundingBox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_min()->::gazebo::msgs::Vector3d::MergeFrom(from.min());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_max()->::gazebo::msgs::Vector3d::MergeFrom(from.max());
    }
  }
}

void BoundingBox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundingBox::CopyFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundingBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_min()) {
    if (!this->min_->IsInitialized()) return false;
  }
  if (has_max()) {
    if (!this->max_->IsInitialized()) return false;
  }
  return true;
}

void BoundingBox::Swap(BoundingBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoundingBox::InternalSwap(BoundingBox* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoundingBox::GetMetadata() const {
  protobuf_sdf_5fbody_5fanalyze_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdf_5fbody_5fanalyze_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BodyAnalysisResponse::InitAsDefaultInstance() {
  ::revolve::msgs::_BodyAnalysisResponse_default_instance_._instance.get_mutable()->boundingbox_ = const_cast< ::revolve::msgs::BoundingBox*>(
      ::revolve::msgs::BoundingBox::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BodyAnalysisResponse::kBoundingBoxFieldNumber;
const int BodyAnalysisResponse::kContactFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BodyAnalysisResponse::BodyAnalysisResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_BodyAnalysisResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:revolve.msgs.BodyAnalysisResponse)
}
BodyAnalysisResponse::BodyAnalysisResponse(const BodyAnalysisResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      contact_(from.contact_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_boundingbox()) {
    boundingbox_ = new ::revolve::msgs::BoundingBox(*from.boundingbox_);
  } else {
    boundingbox_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:revolve.msgs.BodyAnalysisResponse)
}

void BodyAnalysisResponse::SharedCtor() {
  boundingbox_ = NULL;
}

BodyAnalysisResponse::~BodyAnalysisResponse() {
  // @@protoc_insertion_point(destructor:revolve.msgs.BodyAnalysisResponse)
  SharedDtor();
}

void BodyAnalysisResponse::SharedDtor() {
  if (this != internal_default_instance()) delete boundingbox_;
}

void BodyAnalysisResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BodyAnalysisResponse::descriptor() {
  ::protobuf_sdf_5fbody_5fanalyze_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdf_5fbody_5fanalyze_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BodyAnalysisResponse& BodyAnalysisResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_sdf_5fbody_5fanalyze_2eproto::scc_info_BodyAnalysisResponse.base);
  return *internal_default_instance();
}


void BodyAnalysisResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:revolve.msgs.BodyAnalysisResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contact_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(boundingbox_ != NULL);
    boundingbox_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BodyAnalysisResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:revolve.msgs.BodyAnalysisResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .revolve.msgs.BoundingBox boundingBox = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_boundingbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .revolve.msgs.Contact contact = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:revolve.msgs.BodyAnalysisResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:revolve.msgs.BodyAnalysisResponse)
  return false;
#undef DO_
}

void BodyAnalysisResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:revolve.msgs.BodyAnalysisResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .revolve.msgs.BoundingBox boundingBox = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_boundingbox(), output);
  }

  // repeated .revolve.msgs.Contact contact = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->contact(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:revolve.msgs.BodyAnalysisResponse)
}

::google::protobuf::uint8* BodyAnalysisResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:revolve.msgs.BodyAnalysisResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .revolve.msgs.BoundingBox boundingBox = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_boundingbox(), deterministic, target);
  }

  // repeated .revolve.msgs.Contact contact = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->contact(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:revolve.msgs.BodyAnalysisResponse)
  return target;
}

size_t BodyAnalysisResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:revolve.msgs.BodyAnalysisResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .revolve.msgs.Contact contact = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->contact_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contact(static_cast<int>(i)));
    }
  }

  // optional .revolve.msgs.BoundingBox boundingBox = 1;
  if (has_boundingbox()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *boundingbox_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BodyAnalysisResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:revolve.msgs.BodyAnalysisResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BodyAnalysisResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BodyAnalysisResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:revolve.msgs.BodyAnalysisResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:revolve.msgs.BodyAnalysisResponse)
    MergeFrom(*source);
  }
}

void BodyAnalysisResponse::MergeFrom(const BodyAnalysisResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:revolve.msgs.BodyAnalysisResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contact_.MergeFrom(from.contact_);
  if (from.has_boundingbox()) {
    mutable_boundingbox()->::revolve::msgs::BoundingBox::MergeFrom(from.boundingbox());
  }
}

void BodyAnalysisResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:revolve.msgs.BodyAnalysisResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BodyAnalysisResponse::CopyFrom(const BodyAnalysisResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:revolve.msgs.BodyAnalysisResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BodyAnalysisResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->contact())) return false;
  if (has_boundingbox()) {
    if (!this->boundingbox_->IsInitialized()) return false;
  }
  return true;
}

void BodyAnalysisResponse::Swap(BodyAnalysisResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BodyAnalysisResponse::InternalSwap(BodyAnalysisResponse* other) {
  using std::swap;
  CastToBase(&contact_)->InternalSwap(CastToBase(&other->contact_));
  swap(boundingbox_, other->boundingbox_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BodyAnalysisResponse::GetMetadata() const {
  protobuf_sdf_5fbody_5fanalyze_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sdf_5fbody_5fanalyze_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace revolve
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::revolve::msgs::Contact* Arena::CreateMaybeMessage< ::revolve::msgs::Contact >(Arena* arena) {
  return Arena::CreateInternal< ::revolve::msgs::Contact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::revolve::msgs::BoundingBox* Arena::CreateMaybeMessage< ::revolve::msgs::BoundingBox >(Arena* arena) {
  return Arena::CreateInternal< ::revolve::msgs::BoundingBox >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::revolve::msgs::BodyAnalysisResponse* Arena::CreateMaybeMessage< ::revolve::msgs::BodyAnalysisResponse >(Arena* arena) {
  return Arena::CreateInternal< ::revolve::msgs::BodyAnalysisResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
